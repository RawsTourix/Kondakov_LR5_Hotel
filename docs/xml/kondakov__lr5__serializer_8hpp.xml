<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="kondakov__lr5__serializer_8hpp" kind="file" language="C++">
    <compoundname>kondakov_lr5_serializer.hpp</compoundname>
    <includes refid="kondakov__lr5__serializer_8h" local="yes">kondakov_lr5_serializer.h</includes>
    <includedby refid="kondakov__lr5__serializer_8h" local="yes">Kondakov_LR5_Hotel/kondakov_lr5_serializer.h</includedby>
    <incdepgraph>
      <node id="27">
        <label>kondakov_lr5_child_care.h</label>
        <link refid="kondakov__lr5__child__care_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
      </node>
      <node id="28">
        <label>kondakov_lr5_child_care.hpp</label>
        <link refid="kondakov__lr5__child__care_8hpp"/>
        <childnode refid="27" relation="include">
        </childnode>
      </node>
      <node id="21">
        <label>kondakov_lr5_container_operations.hpp</label>
        <link refid="kondakov__lr5__container__operations_8hpp"/>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>kondakov_lr5_def.h</label>
        <link refid="kondakov__lr5__def_8h"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
      </node>
      <node id="26">
        <label>kondakov_lr5_family_room.h</label>
        <link refid="kondakov__lr5__family__room_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
      </node>
      <node id="29">
        <label>kondakov_lr5_family_room.hpp</label>
        <link refid="kondakov__lr5__family__room_8hpp"/>
        <childnode refid="26" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>kondakov_lr5_input_control.h</label>
        <link refid="kondakov__lr5__input__control_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
      </node>
      <node id="20">
        <label>kondakov_lr5_input_control.hpp</label>
        <link refid="kondakov__lr5__input__control_8hpp"/>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>kondakov_lr5_room.h</label>
        <link refid="kondakov__lr5__room_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
      </node>
      <node id="22">
        <label>kondakov_lr5_room.hpp</label>
        <link refid="kondakov__lr5__room_8hpp"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>kondakov_lr5_serializer.h</label>
        <link refid="kondakov__lr5__serializer_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="1" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>Kondakov_LR5_Hotel/kondakov_lr5_serializer.hpp</label>
        <link refid="kondakov__lr5__serializer_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>kondakov_lr5_standard_room.h</label>
        <link refid="kondakov__lr5__standard__room_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
      </node>
      <node id="23">
        <label>kondakov_lr5_standard_room.hpp</label>
        <link refid="kondakov__lr5__standard__room_8hpp"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="24">
        <label>kondakov_lr5_suite.h</label>
        <link refid="kondakov__lr5__suite_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
      </node>
      <node id="25">
        <label>kondakov_lr5_suite.hpp</label>
        <link refid="kondakov__lr5__suite_8hpp"/>
        <childnode refid="24" relation="include">
        </childnode>
      </node>
      <node id="15">
        <label>algorithm</label>
      </node>
      <node id="18">
        <label>fstream</label>
      </node>
      <node id="12">
        <label>functional</label>
      </node>
      <node id="7">
        <label>iostream</label>
      </node>
      <node id="16">
        <label>limits</label>
      </node>
      <node id="10">
        <label>map</label>
      </node>
      <node id="14">
        <label>memory</label>
      </node>
      <node id="19">
        <label>nlohmann/json.hpp</label>
      </node>
      <node id="11">
        <label>sstream</label>
      </node>
      <node id="17">
        <label>tuple</label>
      </node>
      <node id="13">
        <label>type_traits</label>
      </node>
      <node id="8">
        <label>utility</label>
      </node>
      <node id="9">
        <label>vector</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="7">
        <label>Kondakov_LR5_Hotel/kondakov_lr5_main.cpp</label>
        <link refid="kondakov__lr5__main_8cpp"/>
      </node>
      <node id="4">
        <label>Kondakov_LR5_Hotel/kondakov_lr5_menu_object.cpp</label>
        <link refid="kondakov__lr5__menu__object_8cpp"/>
      </node>
      <node id="3">
        <label>Kondakov_LR5_Hotel/kondakov_lr5_menu_object.h</label>
        <link refid="kondakov__lr5__menu__object_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>Kondakov_LR5_Hotel/kondakov_lr5_menu_object.hpp</label>
        <link refid="kondakov__lr5__menu__object_8hpp"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>Kondakov_LR5_Hotel/kondakov_lr5_methods.h</label>
        <link refid="kondakov__lr5__methods_8h"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>Kondakov_LR5_Hotel/kondakov_lr5_methods.hpp</label>
        <link refid="kondakov__lr5__methods_8hpp"/>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>Kondakov_LR5_Hotel/kondakov_lr5_serializer.cpp</label>
        <link refid="kondakov__lr5__serializer_8cpp"/>
      </node>
      <node id="2">
        <label>Kondakov_LR5_Hotel/kondakov_lr5_serializer.h</label>
        <link refid="kondakov__lr5__serializer_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="1" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>Kondakov_LR5_Hotel/kondakov_lr5_serializer.hpp</label>
        <link refid="kondakov__lr5__serializer_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <briefdescription>
<para>Реализация методов сериализации </para>
    </briefdescription>
    <detaileddescription>
<para><simplesect kind="author"><para>Kondakov Fedor </para>
</simplesect>
<simplesect kind="date"><para>2025 </para>
</simplesect>
<simplesect kind="version"><para>1.0 </para>
</simplesect>
</para>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>KONDAKOV_LR5_SERIALIZER_HPP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>KONDAKOV_LR5_SERIALIZER_HPP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="kondakov__lr5__serializer_8h" kindref="compound">kondakov_lr5_serializer.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Container&gt;</highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>enable_if_t&lt;is_same_v&lt;typename<sp/>Container::value_type,<sp/>shared_ptr&lt;Room&gt;&gt;,<sp/><ref refid="group__core__definitions_1gab701e3ac61a85b337ec5c1abaad6742d" kindref="member">json</ref>&gt;</highlight></codeline>
<codeline lineno="21" refid="namespace_serializer_1ad9ba9956a2b2bf0be83245d3621cb9dc" refkind="member"><highlight class="normal"><ref refid="namespace_serializer_1ad9ba9956a2b2bf0be83245d3621cb9dc" kindref="member">Serializer::serialize_rooms</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Container&amp;<sp/>rooms)<sp/>{</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__core__definitions_1gab701e3ac61a85b337ec5c1abaad6742d" kindref="member">json</ref><sp/>j;</highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>room<sp/>:<sp/>rooms)<sp/>{</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__core__definitions_1gab701e3ac61a85b337ec5c1abaad6742d" kindref="member">json</ref><sp/>room_json<sp/>=<sp/>room-&gt;to_json();</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>room_json[</highlight><highlight class="stringliteral">&quot;type&quot;</highlight><highlight class="normal">]<sp/>=<sp/>room-&gt;get_json_type();</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>j.push_back(room_json);</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>j;</highlight></codeline>
<codeline lineno="31"><highlight class="normal">}</highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Container&gt;</highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>enable_if_t&lt;is_same_v&lt;typename<sp/>Container::value_type,<sp/>shared_ptr&lt;Room&gt;&gt;,<sp/>Container&gt;</highlight></codeline>
<codeline lineno="39" refid="namespace_serializer_1a4703ee1c8aebc4ee00f07f6ece701e3c" refkind="member"><highlight class="normal"><ref refid="namespace_serializer_1a4703ee1c8aebc4ee00f07f6ece701e3c" kindref="member">Serializer::deserialize_rooms</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="group__core__definitions_1gab701e3ac61a85b337ec5c1abaad6742d" kindref="member">json</ref>&amp;<sp/>j)<sp/>{</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/>vector&lt;shared_ptr&lt;Room&gt;&gt;<sp/>rooms;</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>item<sp/>:<sp/>j)<sp/>{</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>type(item[</highlight><highlight class="stringliteral">&quot;type&quot;</highlight><highlight class="normal">]);</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>it<sp/>=<sp/>registry.creators.find(type);</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(it<sp/>==<sp/>registry.creators.end())<sp/>{</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>runtime_error(</highlight><highlight class="stringliteral">&quot;Неизвестный<sp/>тип<sp/>комнаты:<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>type);</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>room<sp/>=<sp/>it-&gt;second();</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>room-&gt;from_json(item);</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rooms.push_back(room);</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>rooms;</highlight></codeline>
<codeline lineno="55"><highlight class="normal">}</highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Container&gt;</highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>enable_if_t&lt;is_same_v&lt;typename<sp/>Container::value_type,<sp/>shared_ptr&lt;Room&gt;&gt;,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">&gt;</highlight></codeline>
<codeline lineno="63" refid="namespace_serializer_1a68f703f287bd0348bdd559f9664121f6" refkind="member"><highlight class="normal"><ref refid="namespace_serializer_1a68f703f287bd0348bdd559f9664121f6" kindref="member">Serializer::save_rooms_to_file</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Container&amp;<sp/>rooms,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal">&amp;<sp/>filename)<sp/>{</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/>ofstream<sp/>f(filename);</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!f.is_open())<sp/>{</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>runtime_error(</highlight><highlight class="stringliteral">&quot;Ошибка<sp/>открытия<sp/>файла:<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>filename);</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/>f<sp/>&lt;&lt;<sp/><ref refid="namespace_serializer_1ad9ba9956a2b2bf0be83245d3621cb9dc" kindref="member">serialize_rooms</ref>(rooms).dump(2);</highlight></codeline>
<codeline lineno="70"><highlight class="normal">}</highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Container&gt;</highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>enable_if_t&lt;is_same_v&lt;typename<sp/>Container::value_type,<sp/>shared_ptr&lt;Room&gt;&gt;,<sp/>Container&gt;</highlight></codeline>
<codeline lineno="78" refid="namespace_serializer_1a634c26f6c5a03bed3540431ba9846a1e" refkind="member"><highlight class="normal"><ref refid="namespace_serializer_1a634c26f6c5a03bed3540431ba9846a1e" kindref="member">Serializer::load_rooms_from_file</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal">&amp;<sp/>filename)<sp/>{</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/>ifstream<sp/>f(filename);</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!f.is_open())<sp/>{</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>runtime_error(</highlight><highlight class="stringliteral">&quot;Ошибка<sp/>открытия<sp/>файла:<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>filename);</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__core__definitions_1gab701e3ac61a85b337ec5c1abaad6742d" kindref="member">json</ref><sp/>j;</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/>f<sp/>&gt;&gt;<sp/>j;</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespace_serializer_1a4703ee1c8aebc4ee00f07f6ece701e3c" kindref="member">deserialize_rooms&lt;Container&gt;</ref>(j);</highlight></codeline>
<codeline lineno="87"><highlight class="normal">}</highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">//<sp/>KONDAKOV_LR5_SERIALIZER_HPP</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="Kondakov_LR5_Hotel/kondakov_lr5_serializer.hpp"/>
  </compounddef>
</doxygen>
