<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="kondakov__lr5__room_8cpp" kind="file" language="C++">
    <compoundname>kondakov_lr5_room.cpp</compoundname>
    <includes refid="kondakov__lr5__room_8h" local="yes">kondakov_lr5_room.h</includes>
    <incdepgraph>
      <node id="19">
        <label>kondakov_lr5_container_operations.hpp</label>
        <link refid="kondakov__lr5__container__operations_8hpp"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>kondakov_lr5_def.h</label>
        <link refid="kondakov__lr5__def_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>kondakov_lr5_input_control.h</label>
        <link refid="kondakov__lr5__input__control_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
      </node>
      <node id="18">
        <label>kondakov_lr5_input_control.hpp</label>
        <link refid="kondakov__lr5__input__control_8hpp"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>Kondakov_LR5_Hotel/kondakov_lr5_room.cpp</label>
        <link refid="kondakov__lr5__room_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>kondakov_lr5_room.h</label>
        <link refid="kondakov__lr5__room_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
      </node>
      <node id="20">
        <label>kondakov_lr5_room.hpp</label>
        <link refid="kondakov__lr5__room_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="13">
        <label>algorithm</label>
      </node>
      <node id="16">
        <label>fstream</label>
      </node>
      <node id="10">
        <label>functional</label>
      </node>
      <node id="5">
        <label>iostream</label>
      </node>
      <node id="14">
        <label>limits</label>
      </node>
      <node id="8">
        <label>map</label>
      </node>
      <node id="12">
        <label>memory</label>
      </node>
      <node id="17">
        <label>nlohmann/json.hpp</label>
      </node>
      <node id="9">
        <label>sstream</label>
      </node>
      <node id="15">
        <label>tuple</label>
      </node>
      <node id="11">
        <label>type_traits</label>
      </node>
      <node id="6">
        <label>utility</label>
      </node>
      <node id="7">
        <label>vector</label>
      </node>
    </incdepgraph>
    <sectiondef kind="user-defined">
      <header>Операторы сравнения</header>
      <memberdef kind="function" id="kondakov__lr5__room_8cpp_1a5bdf7a1de75c11ddd88a885a55aec2b2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool operator==</definition>
        <argsstring>(const Room &amp;r1, const Room &amp;r2)</argsstring>
        <name>operator==</name>
        <param>
          <type>const <ref refid="class_room" kindref="compound">Room</ref> &amp;</type>
          <declname>r1</declname>
        </param>
        <param>
          <type>const <ref refid="class_room" kindref="compound">Room</ref> &amp;</type>
          <declname>r2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Kondakov_LR5_Hotel/kondakov_lr5_room.cpp" line="54" column="6" bodyfile="Kondakov_LR5_Hotel/kondakov_lr5_room.cpp" bodystart="54" bodyend="54"/>
      </memberdef>
      <memberdef kind="function" id="kondakov__lr5__room_8cpp_1aa0d7134aced47f8d978ff39f0a864db5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool operator==</definition>
        <argsstring>(int room_number, const Room &amp;r2)</argsstring>
        <name>operator==</name>
        <param>
          <type>int</type>
          <declname>room_number</declname>
        </param>
        <param>
          <type>const <ref refid="class_room" kindref="compound">Room</ref> &amp;</type>
          <declname>r2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Kondakov_LR5_Hotel/kondakov_lr5_room.cpp" line="55" column="6" bodyfile="Kondakov_LR5_Hotel/kondakov_lr5_room.cpp" bodystart="55" bodyend="55"/>
      </memberdef>
      <memberdef kind="function" id="kondakov__lr5__room_8cpp_1a7cf209698d3f77299918b41ac1edb880" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool operator==</definition>
        <argsstring>(const Room &amp;r1, int room_number)</argsstring>
        <name>operator==</name>
        <param>
          <type>const <ref refid="class_room" kindref="compound">Room</ref> &amp;</type>
          <declname>r1</declname>
        </param>
        <param>
          <type>int</type>
          <declname>room_number</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Kondakov_LR5_Hotel/kondakov_lr5_room.cpp" line="56" column="6" bodyfile="Kondakov_LR5_Hotel/kondakov_lr5_room.cpp" bodystart="56" bodyend="56"/>
      </memberdef>
      <memberdef kind="function" id="kondakov__lr5__room_8cpp_1a2bcc48d7125c732d1f968edefda56344" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool operator&gt;=</definition>
        <argsstring>(const Room &amp;r1, const Room &amp;r2)</argsstring>
        <name>operator&gt;=</name>
        <param>
          <type>const <ref refid="class_room" kindref="compound">Room</ref> &amp;</type>
          <declname>r1</declname>
        </param>
        <param>
          <type>const <ref refid="class_room" kindref="compound">Room</ref> &amp;</type>
          <declname>r2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Kondakov_LR5_Hotel/kondakov_lr5_room.cpp" line="57" column="6" bodyfile="Kondakov_LR5_Hotel/kondakov_lr5_room.cpp" bodystart="57" bodyend="57"/>
      </memberdef>
      <memberdef kind="function" id="kondakov__lr5__room_8cpp_1af90895751b7344c60584e5d83c5df4c7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool operator&gt;=</definition>
        <argsstring>(int room_number, const Room &amp;r2)</argsstring>
        <name>operator&gt;=</name>
        <param>
          <type>int</type>
          <declname>room_number</declname>
        </param>
        <param>
          <type>const <ref refid="class_room" kindref="compound">Room</ref> &amp;</type>
          <declname>r2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Kondakov_LR5_Hotel/kondakov_lr5_room.cpp" line="58" column="6" bodyfile="Kondakov_LR5_Hotel/kondakov_lr5_room.cpp" bodystart="58" bodyend="58"/>
      </memberdef>
      <memberdef kind="function" id="kondakov__lr5__room_8cpp_1a0f3c42df0072674a25f8423086932abc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool operator&gt;=</definition>
        <argsstring>(const Room &amp;r1, int room_number)</argsstring>
        <name>operator&gt;=</name>
        <param>
          <type>const <ref refid="class_room" kindref="compound">Room</ref> &amp;</type>
          <declname>r1</declname>
        </param>
        <param>
          <type>int</type>
          <declname>room_number</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Kondakov_LR5_Hotel/kondakov_lr5_room.cpp" line="59" column="6" bodyfile="Kondakov_LR5_Hotel/kondakov_lr5_room.cpp" bodystart="59" bodyend="59"/>
      </memberdef>
      <memberdef kind="function" id="kondakov__lr5__room_8cpp_1a8f4f32a23a7f70c30b1719298080a3f6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool operator&lt;=</definition>
        <argsstring>(const Room &amp;r1, const Room &amp;r2)</argsstring>
        <name>operator&lt;=</name>
        <param>
          <type>const <ref refid="class_room" kindref="compound">Room</ref> &amp;</type>
          <declname>r1</declname>
        </param>
        <param>
          <type>const <ref refid="class_room" kindref="compound">Room</ref> &amp;</type>
          <declname>r2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Kondakov_LR5_Hotel/kondakov_lr5_room.cpp" line="60" column="1" bodyfile="Kondakov_LR5_Hotel/kondakov_lr5_room.cpp" bodystart="60" bodyend="60"/>
      </memberdef>
      <memberdef kind="function" id="kondakov__lr5__room_8cpp_1affec85e4ee9e5372f03ecef2690cd917" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool operator&lt;=</definition>
        <argsstring>(int room_number, const Room &amp;r2)</argsstring>
        <name>operator&lt;=</name>
        <param>
          <type>int</type>
          <declname>room_number</declname>
        </param>
        <param>
          <type>const <ref refid="class_room" kindref="compound">Room</ref> &amp;</type>
          <declname>r2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Kondakov_LR5_Hotel/kondakov_lr5_room.cpp" line="61" column="1" bodyfile="Kondakov_LR5_Hotel/kondakov_lr5_room.cpp" bodystart="61" bodyend="61"/>
      </memberdef>
      <memberdef kind="function" id="kondakov__lr5__room_8cpp_1a081c4e1598df929932d016deb4edd71e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool operator&lt;=</definition>
        <argsstring>(const Room &amp;r1, int room_number)</argsstring>
        <name>operator&lt;=</name>
        <param>
          <type>const <ref refid="class_room" kindref="compound">Room</ref> &amp;</type>
          <declname>r1</declname>
        </param>
        <param>
          <type>int</type>
          <declname>room_number</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Kondakov_LR5_Hotel/kondakov_lr5_room.cpp" line="62" column="1" bodyfile="Kondakov_LR5_Hotel/kondakov_lr5_room.cpp" bodystart="62" bodyend="62"/>
      </memberdef>
      <memberdef kind="function" id="kondakov__lr5__room_8cpp_1a7eebef86e38c00ff4187d9d07a677fa6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool operator&gt;</definition>
        <argsstring>(const Room &amp;r1, const Room &amp;r2)</argsstring>
        <name>operator&gt;</name>
        <param>
          <type>const <ref refid="class_room" kindref="compound">Room</ref> &amp;</type>
          <declname>r1</declname>
        </param>
        <param>
          <type>const <ref refid="class_room" kindref="compound">Room</ref> &amp;</type>
          <declname>r2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Kondakov_LR5_Hotel/kondakov_lr5_room.cpp" line="63" column="6" bodyfile="Kondakov_LR5_Hotel/kondakov_lr5_room.cpp" bodystart="63" bodyend="63"/>
      </memberdef>
      <memberdef kind="function" id="kondakov__lr5__room_8cpp_1a00731c176c310af0b71eeacd44346308" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool operator&gt;</definition>
        <argsstring>(int room_number, const Room &amp;r2)</argsstring>
        <name>operator&gt;</name>
        <param>
          <type>int</type>
          <declname>room_number</declname>
        </param>
        <param>
          <type>const <ref refid="class_room" kindref="compound">Room</ref> &amp;</type>
          <declname>r2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Kondakov_LR5_Hotel/kondakov_lr5_room.cpp" line="64" column="6" bodyfile="Kondakov_LR5_Hotel/kondakov_lr5_room.cpp" bodystart="64" bodyend="64"/>
      </memberdef>
      <memberdef kind="function" id="kondakov__lr5__room_8cpp_1af321c6828f557795f589d9f227e26937" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool operator&gt;</definition>
        <argsstring>(const Room &amp;r1, int room_number)</argsstring>
        <name>operator&gt;</name>
        <param>
          <type>const <ref refid="class_room" kindref="compound">Room</ref> &amp;</type>
          <declname>r1</declname>
        </param>
        <param>
          <type>int</type>
          <declname>room_number</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Kondakov_LR5_Hotel/kondakov_lr5_room.cpp" line="65" column="6" bodyfile="Kondakov_LR5_Hotel/kondakov_lr5_room.cpp" bodystart="65" bodyend="65"/>
      </memberdef>
      <memberdef kind="function" id="kondakov__lr5__room_8cpp_1a5e07051c5358a0c18092711c622e666d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool operator&lt;</definition>
        <argsstring>(const Room &amp;r1, const Room &amp;r2)</argsstring>
        <name>operator&lt;</name>
        <param>
          <type>const <ref refid="class_room" kindref="compound">Room</ref> &amp;</type>
          <declname>r1</declname>
        </param>
        <param>
          <type>const <ref refid="class_room" kindref="compound">Room</ref> &amp;</type>
          <declname>r2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Kondakov_LR5_Hotel/kondakov_lr5_room.cpp" line="66" column="1" bodyfile="Kondakov_LR5_Hotel/kondakov_lr5_room.cpp" bodystart="66" bodyend="66"/>
      </memberdef>
      <memberdef kind="function" id="kondakov__lr5__room_8cpp_1a1ca203c6f90c34ceaa451a75b1b330d0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool operator&lt;</definition>
        <argsstring>(int room_number, const Room &amp;r2)</argsstring>
        <name>operator&lt;</name>
        <param>
          <type>int</type>
          <declname>room_number</declname>
        </param>
        <param>
          <type>const <ref refid="class_room" kindref="compound">Room</ref> &amp;</type>
          <declname>r2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Kondakov_LR5_Hotel/kondakov_lr5_room.cpp" line="67" column="1" bodyfile="Kondakov_LR5_Hotel/kondakov_lr5_room.cpp" bodystart="67" bodyend="67"/>
      </memberdef>
      <memberdef kind="function" id="kondakov__lr5__room_8cpp_1ae406d1a4e1a9f132f1f3a6e59efb5b72" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool operator&lt;</definition>
        <argsstring>(const Room &amp;r1, int room_number)</argsstring>
        <name>operator&lt;</name>
        <param>
          <type>const <ref refid="class_room" kindref="compound">Room</ref> &amp;</type>
          <declname>r1</declname>
        </param>
        <param>
          <type>int</type>
          <declname>room_number</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Kondakov_LR5_Hotel/kondakov_lr5_room.cpp" line="68" column="1" bodyfile="Kondakov_LR5_Hotel/kondakov_lr5_room.cpp" bodystart="68" bodyend="68"/>
      </memberdef>
      <memberdef kind="function" id="kondakov__lr5__room_8cpp_1ac5c1ca74e258e0e7b085c01387fcf1c5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool operator!=</definition>
        <argsstring>(const Room &amp;r1, const Room &amp;r2)</argsstring>
        <name>operator!=</name>
        <param>
          <type>const <ref refid="class_room" kindref="compound">Room</ref> &amp;</type>
          <declname>r1</declname>
        </param>
        <param>
          <type>const <ref refid="class_room" kindref="compound">Room</ref> &amp;</type>
          <declname>r2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Kondakov_LR5_Hotel/kondakov_lr5_room.cpp" line="69" column="6" bodyfile="Kondakov_LR5_Hotel/kondakov_lr5_room.cpp" bodystart="69" bodyend="69"/>
      </memberdef>
      <memberdef kind="function" id="kondakov__lr5__room_8cpp_1a48fc1502df2a9d36b8a6a8989f5a6074" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool operator!=</definition>
        <argsstring>(int room_number, const Room &amp;r2)</argsstring>
        <name>operator!=</name>
        <param>
          <type>int</type>
          <declname>room_number</declname>
        </param>
        <param>
          <type>const <ref refid="class_room" kindref="compound">Room</ref> &amp;</type>
          <declname>r2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Kondakov_LR5_Hotel/kondakov_lr5_room.cpp" line="70" column="6" bodyfile="Kondakov_LR5_Hotel/kondakov_lr5_room.cpp" bodystart="70" bodyend="70"/>
      </memberdef>
      <memberdef kind="function" id="kondakov__lr5__room_8cpp_1aae7cfb3e2dbebb2113cefb251ff202cd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool operator!=</definition>
        <argsstring>(const Room &amp;r1, int room_number)</argsstring>
        <name>operator!=</name>
        <param>
          <type>const <ref refid="class_room" kindref="compound">Room</ref> &amp;</type>
          <declname>r1</declname>
        </param>
        <param>
          <type>int</type>
          <declname>room_number</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Kondakov_LR5_Hotel/kondakov_lr5_room.cpp" line="71" column="6" bodyfile="Kondakov_LR5_Hotel/kondakov_lr5_room.cpp" bodystart="71" bodyend="71"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="func">
      <memberdef kind="function" id="kondakov__lr5__room_8cpp_1a36eff138ff44b4dc96c10d5f439cc821" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>ostream &amp;</type>
        <definition>ostream &amp; operator&lt;&lt;</definition>
        <argsstring>(ostream &amp;os, const Room &amp;r)</argsstring>
        <name>operator&lt;&lt;</name>
        <param>
          <type>ostream &amp;</type>
          <declname>os</declname>
        </param>
        <param>
          <type>const <ref refid="class_room" kindref="compound">Room</ref> &amp;</type>
          <declname>r</declname>
        </param>
        <briefdescription>
<para>Оператор вывода </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>os</parametername>
</parameternamelist>
<parameterdescription>
<para>Поток вывода </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>r</parametername>
</parameternamelist>
<parameterdescription>
<para>Комната для вывода </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Поток вывода </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Kondakov_LR5_Hotel/kondakov_lr5_room.cpp" line="91" column="1" bodyfile="Kondakov_LR5_Hotel/kondakov_lr5_room.cpp" bodystart="91" bodyend="94"/>
      </memberdef>
      <memberdef kind="function" id="kondakov__lr5__room_8cpp_1a8b0c15f242679145b4922d1bb7b6ee6e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>istream &amp;</type>
        <definition>istream &amp; operator&gt;&gt;</definition>
        <argsstring>(istream &amp;is, Room &amp;r)</argsstring>
        <name>operator&gt;&gt;</name>
        <param>
          <type>istream &amp;</type>
          <declname>is</declname>
        </param>
        <param>
          <type><ref refid="class_room" kindref="compound">Room</ref> &amp;</type>
          <declname>r</declname>
        </param>
        <briefdescription>
<para>Оператор ввода </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>is</parametername>
</parameternamelist>
<parameterdescription>
<para>Поток ввода </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>r</parametername>
</parameternamelist>
<parameterdescription>
<para>Комната для ввода </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Поток ввода </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Kondakov_LR5_Hotel/kondakov_lr5_room.cpp" line="102" column="9" bodyfile="Kondakov_LR5_Hotel/kondakov_lr5_room.cpp" bodystart="102" bodyend="108"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>Реализация методов класса <ref refid="class_room" kindref="compound">Room</ref>. </para>
    </briefdescription>
    <detaileddescription>
<para><simplesect kind="author"><para>Kondakov Fedor </para>
</simplesect>
<simplesect kind="date"><para>2025 </para>
</simplesect>
<simplesect kind="version"><para>1.0 </para>
</simplesect>
</para>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="kondakov__lr5__room_8h" kindref="compound">kondakov_lr5_room.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/><ref refid="class_room_1ada5e1a0d1221c7ec5dab01c330db4d7a" kindref="member">Room::CURRENCY</ref><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;руб.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="18" refid="class_room_1ac6ef93a7d9c3e1d624e025058d5f16ff" refkind="member"><highlight class="normal"><ref refid="class_room_1ac6ef93a7d9c3e1d624e025058d5f16ff" kindref="member">Room::Room</ref>()</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/><ref refid="class_room_1ac6ef93a7d9c3e1d624e025058d5f16ff" kindref="member">Room</ref>(0,<sp/>0.0f,<sp/>false)<sp/>{</highlight></codeline>
<codeline lineno="20"><highlight class="normal">}</highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="26" refid="class_room_1a85a05efbf9e7aa79f9ea8bd009f03855" refkind="member"><highlight class="normal"><ref refid="class_room_1ac6ef93a7d9c3e1d624e025058d5f16ff" kindref="member">Room::Room</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_room_1a120b984b4105e8f795ca6039302aa0f6" kindref="member">room_number</ref>)</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/><ref refid="class_room_1ac6ef93a7d9c3e1d624e025058d5f16ff" kindref="member">Room</ref>(<ref refid="class_room_1a120b984b4105e8f795ca6039302aa0f6" kindref="member">room_number</ref>,<sp/>0.0f,<sp/>false)<sp/>{</highlight></codeline>
<codeline lineno="28"><highlight class="normal">}</highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="36" refid="class_room_1a1e34f7ecec4b9c6ef694227b38639ba1" refkind="member"><highlight class="normal"><ref refid="class_room_1ac6ef93a7d9c3e1d624e025058d5f16ff" kindref="member">Room::Room</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_room_1a120b984b4105e8f795ca6039302aa0f6" kindref="member">room_number</ref>,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="class_room_1a76266e1148de995bdfa05d07a94ee93e" kindref="member">price_per_night</ref>,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_room_1adeba14cded5e6e9ddc73ca144fc78470" kindref="member">is_booked</ref>)</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/><ref refid="class_room_1a120b984b4105e8f795ca6039302aa0f6" kindref="member">room_number</ref>(<ref refid="class_room_1a120b984b4105e8f795ca6039302aa0f6" kindref="member">room_number</ref>),</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_room_1a76266e1148de995bdfa05d07a94ee93e" kindref="member">price_per_night</ref>(<ref refid="class_room_1a76266e1148de995bdfa05d07a94ee93e" kindref="member">price_per_night</ref>),</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_room_1adeba14cded5e6e9ddc73ca144fc78470" kindref="member">is_booked</ref>(<ref refid="class_room_1adeba14cded5e6e9ddc73ca144fc78470" kindref="member">is_booked</ref>)<sp/>{</highlight></codeline>
<codeline lineno="40"><highlight class="normal">}</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="46" refid="class_room_1aef15fbcb799551fd9e3008fe51266b01" refkind="member"><highlight class="normal"><ref refid="class_room_1ac6ef93a7d9c3e1d624e025058d5f16ff" kindref="member">Room::Room</ref>(<ref refid="class_room_1ac6ef93a7d9c3e1d624e025058d5f16ff" kindref="member">Room</ref>&amp;&amp;<sp/>other)<sp/>noexcept</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/><ref refid="class_room_1a120b984b4105e8f795ca6039302aa0f6" kindref="member">room_number</ref>(exchange(other.room_number,<sp/>0)),</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_room_1a76266e1148de995bdfa05d07a94ee93e" kindref="member">price_per_night</ref>(exchange(other.price_per_night,<sp/>0.0f)),</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_room_1adeba14cded5e6e9ddc73ca144fc78470" kindref="member">is_booked</ref>(other.is_booked)<sp/>{</highlight></codeline>
<codeline lineno="50"><highlight class="normal">}</highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>operator==(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_room" kindref="compound">Room</ref>&amp;<sp/>r1,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_room" kindref="compound">Room</ref>&amp;<sp/>r2)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>r1.<ref refid="class_room_1a120b984b4105e8f795ca6039302aa0f6" kindref="member">room_number</ref><sp/>==<sp/>r2.<ref refid="class_room_1a120b984b4105e8f795ca6039302aa0f6" kindref="member">room_number</ref>;<sp/>}</highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>operator==(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>room_number,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_room" kindref="compound">Room</ref>&amp;<sp/>r2)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>room_number<sp/>==<sp/>r2.<ref refid="class_room_1a120b984b4105e8f795ca6039302aa0f6" kindref="member">room_number</ref>;<sp/>}</highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>operator==(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_room" kindref="compound">Room</ref>&amp;<sp/>r1,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>room_number)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>r1.<ref refid="class_room_1a120b984b4105e8f795ca6039302aa0f6" kindref="member">room_number</ref><sp/>==<sp/>room_number;<sp/>}</highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>operator&gt;=(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_room" kindref="compound">Room</ref>&amp;<sp/>r1,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_room" kindref="compound">Room</ref>&amp;<sp/>r2)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>r1.<ref refid="class_room_1a120b984b4105e8f795ca6039302aa0f6" kindref="member">room_number</ref><sp/>&gt;=<sp/>r2.<ref refid="class_room_1a120b984b4105e8f795ca6039302aa0f6" kindref="member">room_number</ref>;<sp/>}</highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>operator&gt;=(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>room_number,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_room" kindref="compound">Room</ref>&amp;<sp/>r2)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>room_number<sp/>&gt;=<sp/>r2.<ref refid="class_room_1a120b984b4105e8f795ca6039302aa0f6" kindref="member">room_number</ref>;<sp/>}</highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>operator&gt;=(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_room" kindref="compound">Room</ref>&amp;<sp/>r1,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>room_number)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>r1.<ref refid="class_room_1a120b984b4105e8f795ca6039302aa0f6" kindref="member">room_number</ref><sp/>&gt;=<sp/>room_number;<sp/>}</highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>operator&lt;=(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_room" kindref="compound">Room</ref>&amp;<sp/>r1,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_room" kindref="compound">Room</ref>&amp;<sp/>r2)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>r1.<ref refid="class_room_1a120b984b4105e8f795ca6039302aa0f6" kindref="member">room_number</ref><sp/>&lt;=<sp/>r2.<ref refid="class_room_1a120b984b4105e8f795ca6039302aa0f6" kindref="member">room_number</ref>;<sp/>}</highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>operator&lt;=(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>room_number,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_room" kindref="compound">Room</ref>&amp;<sp/>r2)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>room_number<sp/>&lt;=<sp/>r2.<ref refid="class_room_1a120b984b4105e8f795ca6039302aa0f6" kindref="member">room_number</ref>;<sp/>}</highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>operator&lt;=(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_room" kindref="compound">Room</ref>&amp;<sp/>r1,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>room_number)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>r1.<ref refid="class_room_1a120b984b4105e8f795ca6039302aa0f6" kindref="member">room_number</ref><sp/>&lt;=<sp/>room_number;<sp/>}</highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>operator&gt;<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_room" kindref="compound">Room</ref>&amp;<sp/>r1,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_room" kindref="compound">Room</ref>&amp;<sp/>r2)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>r1.<ref refid="class_room_1a120b984b4105e8f795ca6039302aa0f6" kindref="member">room_number</ref><sp/>&gt;<sp/>r2.<ref refid="class_room_1a120b984b4105e8f795ca6039302aa0f6" kindref="member">room_number</ref>;<sp/>}</highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>operator&gt;<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>room_number,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_room" kindref="compound">Room</ref>&amp;<sp/>r2)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>room_number<sp/>&gt;<sp/>r2.<ref refid="class_room_1a120b984b4105e8f795ca6039302aa0f6" kindref="member">room_number</ref>;<sp/>}</highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>operator&gt;<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_room" kindref="compound">Room</ref>&amp;<sp/>r1,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>room_number)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>r1.<ref refid="class_room_1a120b984b4105e8f795ca6039302aa0f6" kindref="member">room_number</ref><sp/>&gt;<sp/>room_number;<sp/>}</highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>operator&lt;<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_room" kindref="compound">Room</ref>&amp;<sp/>r1,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_room" kindref="compound">Room</ref>&amp;<sp/>r2)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>r1.<ref refid="class_room_1a120b984b4105e8f795ca6039302aa0f6" kindref="member">room_number</ref><sp/>&lt;<sp/>r2.<ref refid="class_room_1a120b984b4105e8f795ca6039302aa0f6" kindref="member">room_number</ref>;<sp/>}</highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>operator&lt;<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>room_number,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_room" kindref="compound">Room</ref>&amp;<sp/>r2)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>room_number<sp/>&lt;<sp/>r2.<ref refid="class_room_1a120b984b4105e8f795ca6039302aa0f6" kindref="member">room_number</ref>;<sp/>}</highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>operator&lt;<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_room" kindref="compound">Room</ref>&amp;<sp/>r1,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>room_number)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>r1.<ref refid="class_room_1a120b984b4105e8f795ca6039302aa0f6" kindref="member">room_number</ref><sp/>&lt;<sp/>room_number;<sp/>}</highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>operator!=(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_room" kindref="compound">Room</ref>&amp;<sp/>r1,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_room" kindref="compound">Room</ref>&amp;<sp/>r2)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>r1.<ref refid="class_room_1a120b984b4105e8f795ca6039302aa0f6" kindref="member">room_number</ref><sp/>!=<sp/>r2.<ref refid="class_room_1a120b984b4105e8f795ca6039302aa0f6" kindref="member">room_number</ref>;<sp/>}</highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>operator!=(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>room_number,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_room" kindref="compound">Room</ref>&amp;<sp/>r2)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>room_number<sp/>!=<sp/>r2.<ref refid="class_room_1a120b984b4105e8f795ca6039302aa0f6" kindref="member">room_number</ref>;<sp/>}</highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>operator!=(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_room" kindref="compound">Room</ref>&amp;<sp/>r1,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>room_number)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>r1.<ref refid="class_room_1a120b984b4105e8f795ca6039302aa0f6" kindref="member">room_number</ref><sp/>!=<sp/>room_number;<sp/>}</highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight></codeline>
<codeline lineno="77" refid="class_room_1aff42dadd005f91b3feed3dc2dfb41229" refkind="member"><highlight class="normal">Room::operator<sp/>string()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/>ostringstream<sp/>oss;</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/>oss<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Цена<sp/>за<sp/>ночь:\t\t\t&quot;</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/><ref refid="class_room_1a76266e1148de995bdfa05d07a94ee93e" kindref="member">price_per_night</ref><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="class_room_1ada5e1a0d1221c7ec5dab01c330db4d7a" kindref="member">CURRENCY</ref><sp/>&lt;&lt;<sp/>endl</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Статус<sp/>бронирования:\t\t&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>(<ref refid="class_room_1adeba14cded5e6e9ddc73ca144fc78470" kindref="member">is_booked</ref><sp/>?<sp/></highlight><highlight class="stringliteral">&quot;да&quot;</highlight><highlight class="normal"><sp/>:<sp/></highlight><highlight class="stringliteral">&quot;нет&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>oss.str();</highlight></codeline>
<codeline lineno="83"><highlight class="normal">}</highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight></codeline>
<codeline lineno="91" refid="class_room_1a36eff138ff44b4dc96c10d5f439cc821" refkind="member"><highlight class="normal">ostream&amp;<sp/><ref refid="kondakov__lr5__room_8cpp_1a36eff138ff44b4dc96c10d5f439cc821" kindref="member">operator&lt;&lt;</ref>(ostream&amp;<sp/>os,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_room_1ac6ef93a7d9c3e1d624e025058d5f16ff" kindref="member">Room</ref>&amp;<sp/>r)<sp/>{</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/>os<sp/>&lt;&lt;<sp/>static_cast&lt;string&gt;(r);</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>os;</highlight></codeline>
<codeline lineno="94"><highlight class="normal">}</highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight></codeline>
<codeline lineno="102" refid="class_room_1a8b0c15f242679145b4922d1bb7b6ee6e" refkind="member"><highlight class="normal">istream&amp;<sp/><ref refid="kondakov__lr5__room_8cpp_1a8b0c15f242679145b4922d1bb7b6ee6e" kindref="member">operator&gt;&gt;</ref>(istream&amp;<sp/>is,<sp/><ref refid="class_room_1ac6ef93a7d9c3e1d624e025058d5f16ff" kindref="member">Room</ref>&amp;<sp/>r)<sp/>{</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Введите<sp/>информацию<sp/>о<sp/>комнате:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl<sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(r.<ref refid="class_room_1a2e34a3971a1607066debe10b3577fde2" kindref="member">input_room_number</ref>())<sp/><sp/><sp/><sp/><sp/>{<sp/>is.setstate(ios::failbit);<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>is;<sp/>}</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(r.<ref refid="class_room_1aed37576ec13b3d3d24559e709d0adc32" kindref="member">input_price_per_night</ref>())<sp/>{<sp/>is.setstate(ios::failbit);<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>is;<sp/>}</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(r.<ref refid="class_room_1a693f8c26331cfee829f263c830f3e5ad" kindref="member">input_is_booked</ref>())<sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>is.setstate(ios::failbit);<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>is;<sp/>}</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>is;</highlight></codeline>
<codeline lineno="108"><highlight class="normal">}</highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight></codeline>
<codeline lineno="114" refid="class_room_1a8587d8bc9a7bfbadbe83fbf969c9b370" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/><ref refid="class_room_1a8587d8bc9a7bfbadbe83fbf969c9b370" kindref="member">Room::to_string</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/>ostringstream<sp/>oss;</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/>oss<sp/>&lt;&lt;<sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>oss.str();</highlight></codeline>
<codeline lineno="118"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="Kondakov_LR5_Hotel/kondakov_lr5_room.cpp"/>
  </compounddef>
</doxygen>
